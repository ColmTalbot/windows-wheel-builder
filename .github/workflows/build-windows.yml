# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Wheels

on:
  push:
    branches: [ main ]
    tags: [ v* ]
  pull_request:
    branches: [ main ]

jobs:
  build-windows:
    runs-on: windows-latest

    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        git clone git@git.ligo.org:colm.talbot/bilby-cython.git
        python -m pip install --upgrade pip wheel setuptools setuptools_scm
        python -m pip install cython oldest-supported-numpy
    - name: Build wheel
      run: |
        cd bilby-cython
        for tag in $(git tag)
        do
            python -m pip wheel -v --wheel-dir=wheel --no-deps .
        done
    - name: Fix wheel (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        python -m pip install delvewheel
        Move-Item wheel wheelhouse
        cd wheelhouse
        Get-ChildItem -Path . | ForEach-Object {
          delvewheel repair -vv --wheel-dir . $_
          python -m pip install -v $_
          python -c "import cached_interpolate; print(cached_interpolate.__file__, cached_interpolate.__version__)"
          python -c "import cached_interpolate.build"
        }
        cd ../
    - uses: actions/upload-artifact@v3
      with:
        name: wheelhouse
        path: wheelhouse

  deploy:

    runs-on: ubuntu-latest
    needs: [ build-windows ]
    environment:
      name: pypi
      url: https://pypi.org/p/bilby.cython
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: wheelhouse
        path: dist
    - name: Gather artifacts
      run: |
        ls
        ls dist
#     - name: Publish test package
#       if: github.event_name == 'push'
#       uses: pypa/gh-action-pypi-publish@master
#       with:
#         user: __token__
#         password: ${{ secrets.TEST_PYPI_API_TOKEN }}
#         repository_url: https://test.pypi.org/legacy/
#         skip_existing: true
    - name: Publish package
      if: github.event_name == 'push'
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        skip_existing: true
